
Перем РаботаСТестами;
Перем юТест;

Функция ПолучитьСписокТестов(Тестирование) Экспорт
	
	юТест = Тестирование;
	
	СписокТестов = Новый Массив;
	СписокТестов.Добавить("ТестДолжен_ПодготовитьКаркасПакета");
	
	Возврат СписокТестов;
	
КонецФункции

Функция ЗагрузитьОбработчикКоманд()
	Возврат ЗагрузитьСценарий(ОбъединитьПути(РаботаСТестами.КаталогИсходников(), "opm/commands.os"));
КонецФункции

Функция ФайлСуществует(Знач Имя)
	Возврат Новый Файл(Имя).Существует();
КонецФункции

Процедура ТестДолжен_ПодготовитьКаркасПакета() Экспорт

	ОбработчикКоманд = ЗагрузитьОбработчикКоманд();
	
	КаталогСборки = юТест.ИмяВременногоФайла();
	СоздатьКаталог(КаталогСборки);
	
	ИмяПроекта = "testproject";
	
	ОбработчикКоманд.ПодготовитьКаталогПроекта(ИмяПроекта, КаталогСборки);
	
	КаталогПроекта = ОбъединитьПути(КаталогСборки, ИмяПроекта);
	юТест.Проверить(ФайлСуществует(КаталогПроекта), "Каталог проекта должен существовать");
	
	КонфигБиблиотеки = ОбъединитьПути(КаталогПроекта, "lib.config");
	юТест.Проверить(ФайлСуществует(КонфигБиблиотеки), "Каталог описания пакета должен существовать");
	
	СкриптУстановки = ОбъединитьПути(КаталогПроекта, "__install__.os");
	юТест.Проверить(ФайлСуществует(СкриптУстановки), "Скрипт установки должен существовать");

КонецПроцедуры


РаботаСТестами = ЗагрузитьСценарий("test-commons.os");